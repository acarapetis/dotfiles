"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[ui]
default-command = "forest"
diff-editor = ":builtin"
diff-formatter = ":git"
pager = "delta"

[templates]
log = "builtin_log_compact ++ if(!description && !empty, diff.summary())"

[template-aliases]
"format_timestamp(timestamp)" = "timestamp.ago()"

[revset-aliases]
# direct children of x that are not in x
"offshoots(x)" = "x+ ~ x"

# mutable heads, and their parents when they look like WIP
"tips()" = 'heads(mutable()) | (heads(mutable()) & description(exact:""))-'

# Show local work as a forest with linear commit chains elided:
# Mutable heads, local bookmarks, and the immutable commits they're derived from
"forest()" = "tips() | bookmarks() | offshoots(immutable())-"

[aliases]
l = ["log"]
forest = ["log", "-r", "forest()"]
bl = ["b", "l"]
wc = ["log", "--stat", "-T", "builtin_log_compact_full_description"]

tug = ["bookmark", "move", "--from", "heads(::@- & bookmarks())", "--to", "@-"]
aside = ["split", "-r", "@", "--insert-before", "@"]
reball = ["util", "exec", "--", "bash", "-c", 'jj pull && jj rebase -r "mutable()" -d "trunk()"', ""]

pull = ["git", "fetch"]
push = ["util", "exec", "--", "uvx", "jj-pre-push", "--log-level=INFO", "push"]
pushnew = ["util", "exec", "--", "bash", "-c", 'jj push --named "$1"="${2-@-}"', ""]
pushc = ["util", "exec", "--", "bash", "-c", 'jj push -c "${1-@-}"', ""]

diff2 = ["util", "exec", "--", "env", "DELTA_FEATURES=+side-by-side", "jj", "diff"]
log2 = ["util", "exec", "--", "env", "DELTA_FEATURES=+side-by-side", "jj", "log", "--no-graph", "-p"]
show2 = ["util", "exec", "--", "env", "DELTA_FEATURES=+side-by-side", "jj", "show"]

[fix.tools.1-ruff-lint]
command = ["uvx", "ruff", "check", "--fix", "--quiet", "--stdin-filename=$path", "-"]
patterns = ["glob:'**/*.py'"]

[fix.tools.2-ruff-format]
command = ["uvx", "ruff", "format", "--stdin-filename=$path", "-"]
patterns = ["glob:'**/*.py'"]

[fix.tools.3-terraform-fmt]
command = ["terraform", "fmt", "-"]
patterns = ["glob:'**/*.tf'"]

[fix.tools.4-shfmt]
command = ["shfmt"]
patterns = ["glob:'**/*.sh'"]
