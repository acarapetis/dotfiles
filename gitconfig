# vim: ft=gitconfig et sw=4 ts=4
# Include this file in .gitconfig:
# [include]
#     path = /path/to/gitconfig
[core]
	untrackedCache = true
	fsmonitor = true

[diff]
    algorithm = histogram
    renameLimit = 10000

[fetch]
    prune = true

[push]
    default = simple

[pull]
    ff = only

[submodule]
    recurse = true
    fetchJobs = 4

[clone]
    recurse = true

[merge]
    conflictstyle = zdiff3

[rebase]
    autoStash = true

[rerere]
    enable = true

[column]
    ui = auto

[branch]
    sort = -committerdate

#[blame]
    #ignoreRevsFile = .git-blame-ignore-revs

[alias]
    graph = "log --oneline --graph"
    graph2 = "!f() { git log --graph --pretty='tformat:%C(always,yellow)%h%C(always,reset) %C(always,green)%ar%C(always,reset){%C(always,bold blue)%an%C(always,reset){%C(always,bold red)%d%C(always,reset) %s' \"$@\" | column -t -s '{' | less -XRS --quit-if-one-screen; }; f"
    search = "!git rev-list --all | xargs git grep"

    pullr = "pull --rebase"
    newbranch = "!f() { git fetch origin $1 && git checkout --no-track origin/$1 -b $2; }; f"
    pushnew = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""
    pushf = "push --force-with-lease"
    gethash = "!git rev-parse HEAD | tr -d '\n'"
    pullother = "!f() { git fetch origin $1:$1; }; f"

    branch-cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop\\|main' | xargs -n 1 -r git branch -d"
    ltr = "!f() { cd -- \"${GIT_PREFIX:-.}\"; git ls-files -z \"$@\" | xargs -0 -I{} -- git log -1 --format=\"%ai {}\" {} | sort; }; f"
    b = "branch --format='%(color:#cccc00)%(objectname:short) %(color:red)%(committerdate:short) %(color:bold white)%(refname:short)'"
    bl = "!git -c color.branch=always branch --format='%(color:#cccc00)%(objectname:short) %(color:red)%(committerdate:short) %(color:bold blue)%(refname:short)%(color:reset): %(subject)s' | head -10"

    co = "checkout"
    sw = "switch"
    wc = "log --compact-summary"
